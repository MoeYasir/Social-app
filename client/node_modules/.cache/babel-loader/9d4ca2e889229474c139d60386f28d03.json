{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/update/update.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setOpenUpdate,\n    user\n  } = _ref;\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [texts, setTexts] = useState({\n    email: user.email,\n    password: user.password,\n    name: user.name,\n    city: user.city,\n    website: user.website\n  });\n\n  const upload = async file => {\n    console.log(file);\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setTexts(prev => ({ ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n\n  const queryClient = useQueryClient(); // const mutation = useMutation(\n  //     (user) => {\n  //         return makeRequest.put(\"/users\", user);\n  //     },\n  //     {\n  //         onSuccess: () => {\n  //             queryClient.invalidateQueries([\"user\"]);\n  //         },\n  //     }\n  // );\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let coverUrl;\n    let profileUrl;\n    coverUrl = cover ? await upload(cover) : user.coverPic;\n    profileUrl = profile ? await upload(profile) : user.profilePic;\n    mutation.mutate({ ...texts,\n      coverPic: coverUrl,\n      profilePic: profileUrl\n    });\n    setOpenUpdate(false);\n    setCover(null);\n    setProfile(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"files\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cover\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cover Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imgContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cover ? URL.createObjectURL(cover) : \"/upload/\" + user.coverPic,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"cover\",\n              style: {\n                display: \"none\"\n              },\n              onChange: e => setCover(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profile\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Profile Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imgContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profile ? URL.createObjectURL(profile) : \"/upload/\" + user.profilePic,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"profile\",\n              style: {\n                display: \"none\"\n              },\n              onChange: e => setProfile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: texts.email,\n            name: \"email\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: texts.password,\n            name: \"password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: texts.name,\n            name: \"name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Country / City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: texts.city,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"website\",\n            value: texts.website,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: () => setOpenUpdate(false),\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n};\n\n_s(Update, \"qaANpxCVmXxG4bXeVTRWQqeQPJA=\", false, function () {\n  return [useQueryClient];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/update/update.jsx"],"names":["useState","makeRequest","useMutation","useQueryClient","CloudUploadIcon","Update","setOpenUpdate","user","cover","setCover","profile","setProfile","texts","setTexts","email","password","name","city","website","upload","file","console","log","formData","FormData","append","res","post","data","err","handleChange","e","prev","target","value","queryClient","handleClick","preventDefault","coverUrl","profileUrl","coverPic","profilePic","mutation","mutate","URL","createObjectURL","display","files"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n\nconst Update = ({ setOpenUpdate, user }) => {\n    const [cover, setCover] = useState(null);\n    const [profile, setProfile] = useState(null);\n    const [texts, setTexts] = useState({\n        email: user.email,\n        password: user.password,\n        name: user.name,\n        city: user.city,\n        website: user.website,\n    });\n\n    const upload = async (file) => {\n        console.log(file)\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            const res = await makeRequest.post(\"/upload\", formData);\n            return res.data;\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const handleChange = (e) => {\n        setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n    };\n\n    const queryClient = useQueryClient();\n\n    // const mutation = useMutation(\n    //     (user) => {\n    //         return makeRequest.put(\"/users\", user);\n    //     },\n    //     {\n    //         onSuccess: () => {\n    //             queryClient.invalidateQueries([\"user\"]);\n    //         },\n    //     }\n    // );\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n\n\n        let coverUrl;\n        let profileUrl;\n        coverUrl = cover ? await upload(cover) : user.coverPic;\n        profileUrl = profile ? await upload(profile) : user.profilePic;\n\n        mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n        setOpenUpdate(false);\n        setCover(null);\n        setProfile(null);\n\n        return (\n            <div className=\"update\">\n                <div className=\"wrapper\">\n                    <h1>Update Your Profile</h1>\n                    <form>\n                        <div className=\"files\">\n                            <label htmlFor=\"cover\">\n                                <span>Cover Picture</span>\n                                <div className=\"imgContainer\">\n                                    <img\n                                        src={\n                                            cover\n                                                ? URL.createObjectURL(cover)\n                                                : \"/upload/\" + user.coverPic\n                                        }\n                                        alt=\"\"\n                                    />\n                                    <CloudUploadIcon className=\"icon\" />\n                                </div>\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"cover\"\n                                style={{ display: \"none\" }}\n                                onChange={(e) => setCover(e.target.files[0])}\n                            />\n                            <label htmlFor=\"profile\">\n                                <span>Profile Picture</span>\n                                <div className=\"imgContainer\">\n                                    <img\n                                        src={\n                                            profile\n                                                ? URL.createObjectURL(profile)\n                                                : \"/upload/\" + user.profilePic\n                                        }\n                                        alt=\"\"\n                                    />\n                                    <CloudUploadIcon className=\"icon\" />\n                                </div>\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"profile\"\n                                style={{ display: \"none\" }}\n                                onChange={(e) => setProfile(e.target.files[0])}\n                            />\n                        </div>\n                        <label>Email</label>\n                        <input\n                            type=\"text\"\n                            value={texts.email}\n                            name=\"email\"\n                            onChange={handleChange}\n                        />\n                        <label>Password</label>\n                        <input\n                            type=\"text\"\n                            value={texts.password}\n                            name=\"password\"\n                            onChange={handleChange}\n                        />\n                        <label>Name</label>\n                        <input\n                            type=\"text\"\n                            value={texts.name}\n                            name=\"name\"\n                            onChange={handleChange}\n                        />\n                        <label>Country / City</label>\n                        <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={texts.city}\n                            onChange={handleChange}\n                        />\n                        <label>Website</label>\n                        <input\n                            type=\"text\"\n                            name=\"website\"\n                            value={texts.website}\n                            onChange={handleChange}\n                        />\n                        <button onClick={handleClick}>Update</button>\n                    </form>\n                    <button className=\"close\" onClick={() => setOpenUpdate(false)}>\n                        close\n                    </button>\n                </div>\n            </div>\n        );\n    };\n};\nexport default Update;"]},"metadata":{},"sourceType":"module"}