{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/update/update.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./update.scss\";\nimport { makeRequest } from \"../../axios.js\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setOpenUpdate,\n    user\n  } = _ref;\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const queryClient = useQueryClient();\n  const [texts, setTexts] = useState({\n    name: \"\",\n    city: \"\",\n    website: \"\"\n  });\n\n  const upload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    setTexts(prev => ({ ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n\n  const mutation = useMutation({\n    mutationFn: user => {\n      return makeRequest.put(\"/users\", user);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['user']\n      });\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    let coverUrl = user.coverPic;\n    let profileUrl = user.profilePic;\n    coverUrl = cover ? await upload(cover) : user.coverPic;\n    profileUrl = profile ? await upload(profile) : user.profilePic;\n    mutation.mutate({ ...texts,\n      coverPic: coverUrl,\n      profilePic: profileUrl\n    });\n    setOpenUpdate(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [\"Update\", /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setCover(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setProfile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"website\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenUpdate(false),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Update, \"xoEW7NMEHd/1XG1g8e482JvPoUM=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/update/update.jsx"],"names":["useState","makeRequest","useMutation","useQueryClient","Update","setOpenUpdate","user","cover","setCover","profile","setProfile","queryClient","texts","setTexts","name","city","website","upload","file","formData","FormData","append","res","post","data","error","console","log","handleChange","e","prev","target","value","mutation","mutationFn","put","onSuccess","invalidateQueries","queryKey","handleClick","preventDefault","coverUrl","coverPic","profileUrl","profilePic","mutate","files"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./update.scss\"\nimport { makeRequest } from \"../../axios.js\"\nimport {\n    useMutation,\n    useQueryClient,\n} from '@tanstack/react-query'\nconst Update = ({ setOpenUpdate, user }) => {\n    const [cover, setCover] = useState(null);\n    const [profile, setProfile] = useState(null);\n    const queryClient = useQueryClient();\n\n    const [texts, setTexts] = useState({\n        name: \"\",\n        city: \"\",\n        website: \"\",\n    })\n    const upload = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            const res = await makeRequest.post(\"/upload\", formData);\n            return res.data;\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n    const handleChange = (e) => {\n\n        setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n    };\n\n    const mutation = useMutation({\n        mutationFn: (user) => {\n\n            return makeRequest.put(\"/users\", user)\n        },\n        onSuccess: () => {\n\n            queryClient.invalidateQueries({ queryKey: ['user'] })\n        },\n    })\n    const handleClick = async (e) => {\n        e.preventDefault();\n        let coverUrl = user.coverPic;\n        let profileUrl = user.profilePic;\n\n        coverUrl = cover ? await upload(cover) : user.coverPic;\n        profileUrl = profile ? await upload(profile) : user.profilePic;\n        mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n        setOpenUpdate(false);\n\n    }\n    return <div className=\"update\">Update\n        <form action=\"\">\n            <input type=\"file\" onChange={e => setCover(e.target.files[0])} />\n            <input type=\"file\" onChange={e => setProfile(e.target.files[0])} />\n            <input type=\"text\" name=\"name\" onChange={handleChange} />\n            <input type=\"text\" name=\"city\" onChange={handleChange} />\n            <input type=\"text\" name=\"website\" onChange={handleChange} />\n            <button onClick={handleClick}>Update</button>\n\n        </form>\n        <button onClick={() => setOpenUpdate(false)}>\n            X\n        </button>    </div>;\n}\n\nexport default Update;"]},"metadata":{},"sourceType":"module"}