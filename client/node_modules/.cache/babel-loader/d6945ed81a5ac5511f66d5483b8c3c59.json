{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/comments/Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios.js\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: async () => (await makeRequest.get(\"/comments?postId=\" + postId)).data\n  });\n  const [desc, setDesc] = useState(\"\");\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: newComment => {\n      return makeRequest.post(\"/comments\", newComment);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['comments']\n      });\n    }\n  });\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        onChange: e => setDesc(e.target.value),\n        value: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLoading ? \"Loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"Yu81QKzYVobxNLeoZnU5qegmWk0=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/mohammedyasir/Desktop/reactProjects/social media app backend/client/src/components/comments/Comments.jsx"],"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","Comments","postId","currentUser","isLoading","error","data","queryKey","queryFn","get","desc","setDesc","queryClient","mutation","mutationFn","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","profilePic","target","value","map","comment","name","createdAt","fromNow"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport {\n  useQuery, useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios.js\"\nimport moment from \"moment\";\nconst Comments = ({ postId }) => {\n  const { currentUser } = useContext(AuthContext);\n  const { isLoading, error, data } = useQuery({\n    queryKey: [\"comments\"],\n    queryFn: async () => ((await makeRequest.get(\"/comments?postId=\" + postId)).data),\n  });\n  const [desc, setDesc] = useState(\"\");\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: (newComment) => {\n\n      return makeRequest.post(\"/comments\", newComment)\n    },\n    onSuccess: () => {\n\n      queryClient.invalidateQueries({ queryKey: ['comments'] })\n    },\n  });\n  const handleClick = async (e) => {\n\n    e.preventDefault();\n    mutation.mutate({ desc, postId });\n    setDesc(\"\");\n\n  }\n  return (\n    <div className=\"comments\">\n      <div className=\"write\">\n        <img src={currentUser.profilePic} alt=\"\" />\n        <input type=\"text\" placeholder=\"write a comment\" onChange={(e) => setDesc(e.target.value)} value={desc} />\n        <button onClick={handleClick}>Send</button>\n      </div>\n\n\n\n      {\n        isLoading ? \"Loading\" :\n          data.map((comment) => (\n            <div className=\"comment\">\n              <img src={comment.profilePic} alt=\"\" />\n              <div className=\"info\">\n                <span>{comment.name}</span>\n                <p>{comment.desc}</p>\n              </div>\n              <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}